#https://leetcode.com/problems/kth-largest-element-in-an-array/
#Input: nums = [3,2,1,5,6,4], k = 2
#Output: 5
def partition(arr,left,right):
	pivot  = arr[right]
	partitionIdx = left
	for j in range(left,right):
		if arr[j]<pivot:
			arr[partitionIdx],arr[j] = arr[j],arr[partitionIdx]
			partitionIdx+=1
	arr[right],arr[partitionIdx] = arr[partitionIdx],arr[right]
	return partitionIdx

def quickSort(arr,left,right,idxToFind):
	if left<right:
	partitionIdx = partition(arr,left,right)
	if partitionIdx == idxToFind:
		return arr[partitionIdx]
	elif idxToFind<partitionIdx:
		return quickSort(arr,left,partitionIdx-1,idxToFind)
	else:
		return quickSort(arr,partitionIdx+1,right,idxToFind)


def getKthLargest(arr,k):
	indexToFind = len(arr)-k
	quickSort(arr,0,len(arr)-1,indexToFind)
	return arr[indexToFind]