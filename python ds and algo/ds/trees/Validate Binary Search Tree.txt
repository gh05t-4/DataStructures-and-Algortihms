Validate Binary Search Tree
Input: root = [2,1,3]
Output: true

# Definition for a binary tree node.
class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
class Solution:
    def isValidBST(self, root: Optional[TreeNode]) -> bool:
                # Use maximal system integer to represent infinity
        INF = sys.maxsize
        
        def helper(node,lower,upper):
            if not node:
                #empty node or empty tree
                return True
            if lower < node.val < upper:
                #checking if all the node follows bst
                return helper(node.left,lower,node.val) and helper(node.right,node.val,upper)
            else:
                return False
            
        return helper(node=root,lower=-INF,upper=INF)
    